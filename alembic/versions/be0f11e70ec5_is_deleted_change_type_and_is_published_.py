"""is_deleted change type and is_published column add

Revision ID: be0f11e70ec5
Revises: 7a30619dc068
Create Date: 2025-03-16 00:59:56.739460

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'be0f11e70ec5'
down_revision: Union[str, None] = '7a30619dc068'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('tb_bulletins', sa.Column('is_published', sa.CHAR(length=1), nullable=False, server_default="F"))

    # 기존 BOOLEAN 타입에서 CHAR(5)로 변환 (임시 단계)
    op.alter_column('tb_bulletin_templates', 'is_deleted', existing_type=sa.BOOLEAN(), type_=sa.CHAR(length=5), existing_nullable=False, server_default="F")
    op.alter_column('tb_bulletins', 'is_deleted', existing_type=sa.BOOLEAN(), type_=sa.CHAR(length=5), existing_nullable=False, server_default="F")
    op.alter_column('tb_church_admins', 'is_deleted', existing_type=sa.BOOLEAN(), type_=sa.CHAR(length=5), existing_nullable=False, server_default="F")
    op.alter_column('tb_churches', 'is_deleted', existing_type=sa.BOOLEAN(), type_=sa.CHAR(length=5), existing_nullable=False, server_default="F")
    op.alter_column('tb_users', 'is_deleted', existing_type=sa.BOOLEAN(), type_=sa.CHAR(length=5), existing_nullable=False, server_default="F")

    # 데이터 변환
    op.execute("UPDATE tb_bulletin_templates SET is_deleted = 'F' WHERE is_deleted = 'false'")
    op.execute("UPDATE tb_bulletins SET is_deleted = 'F' WHERE is_deleted = 'false'")
    op.execute("UPDATE tb_church_admins SET is_deleted = 'F' WHERE is_deleted = 'false'")
    op.execute("UPDATE tb_churches SET is_deleted = 'F' WHERE is_deleted = 'false'")
    op.execute("UPDATE tb_users SET is_deleted = 'F' WHERE is_deleted = 'false'")
    op.execute("UPDATE tb_bulletin_templates SET is_deleted = 'T' WHERE is_deleted = 'true'")
    op.execute("UPDATE tb_bulletins SET is_deleted = 'T' WHERE is_deleted = 'true'")
    op.execute("UPDATE tb_church_admins SET is_deleted = 'T' WHERE is_deleted = 'true'")
    op.execute("UPDATE tb_churches SET is_deleted = 'T' WHERE is_deleted = 'true'")
    op.execute("UPDATE tb_users SET is_deleted = 'T' WHERE is_deleted = 'true'")

    # CHAR(5)에서 CHAR(1)로 변환 (최종 단계)
    op.alter_column('tb_bulletin_templates', 'is_deleted', existing_type=sa.BOOLEAN(), type_=sa.CHAR(length=1), existing_nullable=False, server_default="F")
    op.alter_column('tb_bulletins', 'is_deleted', existing_type=sa.BOOLEAN(), type_=sa.CHAR(length=1), existing_nullable=False, server_default="F")
    op.alter_column('tb_church_admins', 'is_deleted', existing_type=sa.BOOLEAN(), type_=sa.CHAR(length=1), existing_nullable=False, server_default="F")
    op.alter_column('tb_churches', 'is_deleted', existing_type=sa.BOOLEAN(), type_=sa.CHAR(length=1), existing_nullable=False, server_default="F")
    op.alter_column('tb_users', 'is_deleted', existing_type=sa.BOOLEAN(), type_=sa.CHAR(length=1), existing_nullable=False, server_default="F")

    # T/F 값만 허용하는 CHECK 제약 조건 추가
    op.execute("ALTER TABLE tb_bulletin_templates ADD CONSTRAINT chk_bulletin_templates__is_deleted CHECK (is_deleted IN ('T', 'F'))")
    op.execute("ALTER TABLE tb_bulletins ADD CONSTRAINT chk_bulletins__is_deleted CHECK (is_deleted IN ('T', 'F'))")
    op.execute("ALTER TABLE tb_church_admins ADD CONSTRAINT chk_church_admins__is_deleted CHECK (is_deleted IN ('T', 'F'))")
    op.execute("ALTER TABLE tb_churches ADD CONSTRAINT chk_churches__is_deleted CHECK (is_deleted IN ('T', 'F'))")
    op.execute("ALTER TABLE tb_users ADD CONSTRAINT chk_users__is_deleted CHECK (is_deleted IN ('T', 'F'))")

    # is_published 컬럼에도 T/F 값만 허용하는 CHECK 제약 조건 추가
    op.execute("ALTER TABLE tb_bulletins ADD CONSTRAINT chk_bulletins__is_published CHECK (is_published IN ('T', 'F'))")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    # CHECK 제약 조건 제거
    op.execute("ALTER TABLE tb_bulletin_templates DROP CONSTRAINT IF EXISTS chk_bulletin_templates__is_deleted")
    op.execute("ALTER TABLE tb_bulletins DROP CONSTRAINT IF EXISTS chk_bulletins__is_deleted")
    op.execute("ALTER TABLE tb_church_admins DROP CONSTRAINT IF EXISTS chk_church_admins__is_deleted")
    op.execute("ALTER TABLE tb_churches DROP CONSTRAINT IF EXISTS chk_churches__is_deleted")
    op.execute("ALTER TABLE tb_users DROP CONSTRAINT IF EXISTS chk_users__is_deleted")
    op.execute("ALTER TABLE tb_bulletins DROP CONSTRAINT IF EXISTS chk_bulletins__is_published")

    # 먼저 기본값을 제거하여 타입 변환을 용이하게 함
    op.execute("ALTER TABLE tb_users ALTER COLUMN is_deleted DROP DEFAULT")
    op.execute("ALTER TABLE tb_churches ALTER COLUMN is_deleted DROP DEFAULT")
    op.execute("ALTER TABLE tb_church_admins ALTER COLUMN is_deleted DROP DEFAULT")
    op.execute("ALTER TABLE tb_bulletins ALTER COLUMN is_deleted DROP DEFAULT")
    op.execute("ALTER TABLE tb_bulletin_templates ALTER COLUMN is_deleted DROP DEFAULT")

    # CHAR(1)에서 BOOLEAN으로 변환 시 USING 절을 사용하여 명시적 변환
    # 'T'는 true로, 'F'는 false로 변환
    op.alter_column(
        'tb_users', 'is_deleted',
        existing_type=sa.CHAR(length=1),
        type_=sa.BOOLEAN(),
        existing_nullable=False,
        postgresql_using="CASE WHEN is_deleted = 'T' THEN true ELSE false END"
    )

    op.alter_column(
        'tb_churches', 'is_deleted',
        existing_type=sa.CHAR(length=1),
        type_=sa.BOOLEAN(),
        existing_nullable=False,
        postgresql_using="CASE WHEN is_deleted = 'T' THEN true ELSE false END"
    )

    op.alter_column(
        'tb_church_admins', 'is_deleted',
        existing_type=sa.CHAR(length=1),
        type_=sa.BOOLEAN(),
        existing_nullable=False,
        postgresql_using="CASE WHEN is_deleted = 'T' THEN true ELSE false END"
    )

    op.alter_column(
        'tb_bulletins', 'is_deleted',
        existing_type=sa.CHAR(length=1),
        type_=sa.BOOLEAN(),
        existing_nullable=False,
        postgresql_using="CASE WHEN is_deleted = 'T' THEN true ELSE false END"
    )

    op.alter_column(
        'tb_bulletin_templates', 'is_deleted',
        existing_type=sa.CHAR(length=1),
        type_=sa.BOOLEAN(),
        existing_nullable=False,
        postgresql_using="CASE WHEN is_deleted = 'T' THEN true ELSE false END"
    )

    # 타입 변환 후 새로운 기본값 설정
    op.execute("ALTER TABLE tb_users ALTER COLUMN is_deleted SET DEFAULT false")
    op.execute("ALTER TABLE tb_churches ALTER COLUMN is_deleted SET DEFAULT false")
    op.execute("ALTER TABLE tb_church_admins ALTER COLUMN is_deleted SET DEFAULT false")
    op.execute("ALTER TABLE tb_bulletins ALTER COLUMN is_deleted SET DEFAULT false")
    op.execute("ALTER TABLE tb_bulletin_templates ALTER COLUMN is_deleted SET DEFAULT false")

    op.drop_column('tb_bulletins', 'is_published')
    # ### end Alembic commands ###
